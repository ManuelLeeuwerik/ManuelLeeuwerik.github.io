[["index.html", "Portfolio Manuel Leeuwerik 1 Introductie", " Portfolio Manuel Leeuwerik Manuel Leeuwerik 2025-01-08 1 Introductie In mijn portfolio staat onder andere: mijn CV, een nieuw geleerde package, een C.elegans analyse een open peer review en een zelf gemaakte package genaamd spottingpenguins. Voor de verwijzing naar referenties is gebruik gemaakt van Zotero. "],["CV.html", "2 Curriculum Vitae", " 2 Curriculum Vitae Dit CV is gemaakt met behulp van R Markdown en de vitae package, te vinden op: https://github.com/mitchelloharawild/vitae. Het “Awesome CV template”, ontwikkeld door Mitchell O’Hara-Wild en Rob Hyndman, is aangepast naar eigen data. "],["scRepertoire.html", "3 Single-cell immune receptor profiling 3.1 Planning 3.2 Experiment opzet 3.3 Data voorbereiding 3.4 Analyse 3.5 Conclusie", " 3 Single-cell immune receptor profiling Vanwege mijn interesse in immunologie ga ik een analyse/package leren voor ‘single-cell immune receptor profiling’. Deze analyse maakt een profiel voor individuele cellen en onderzoekt T-cell receptoren (TCR) en immunoglobulinen (Ig). Hierbij wordt scRNA sequencing data omgezet in onder andere V/D/J libraries. Met behulp van descRepertoire package kunnen deze V(D)J-segmenten en CDR3-regio’s geanalyseerd worden (theHumanBorch 2024). Door de verschillende clonotypes te identificeren, kan men uitspraken doen over immuunresponsen, die vervolgens gekoppeld kunnen worden aan specifieke infecties of vaccinaties (“Single-Cell Immune Profiling” n.d.). De scRepertoire package is afkomstig van: https://github.com/ncborcherding/scRepertoire (theHumanBorch 2024). Om deze package te leren maak ik gebruik van de tutorial ‘Starting work with scRepertoire’: https://www.bioconductor.org/packages/devel/bioc/vignettes/scRepertoire/inst/doc/vignette.html. (“Starting Work with scRepertoire.” n.d.). 3.1 Planning Ik volg de tutorial eerst zoals die er staat, met voorbeeld files. Daarna maak ik gebruik van data afkomstig van een onderzoek op NCBI. Om de analyse context en betekenis te kunnen geven bestudeer ik de (relevante) gebruikte technieken. Met hierbij de vragen: wat is het doel van het gehele onderzoek? Welke deelvraag beantwoord deze analyse van het onderzoek? En hoe is de gebruikte data gegenereerd? Zie onderstaande tabel voor de volledige uitwerking. Table 3.1: Planning voor analyse met scRepertoire Datum Doel Tijd (uren) 23-11-2024 Installatie en setup van de package, processing van sample data 4 25-11-2024 Basis klonale visualisatie plots op sample data 4 27-11-2024 Complexe visualisatie plots op sample data 4 28-11-2024 Uitzoeken van een NCBI dataset, doel en experiment opzet van studie samenvatten. Data van gekozen studie importeren 4 30-11-2024 Processing van data en bepalen welke analyses uitgevoerd worden 4 2-12-2024 De gekozen scRepertoire analyses uitvoeren 4 4-12-2024 Verder met analyseren en plotten van studie data 4 10-12-2024 Resultaten samenvatten en conclusies maken in context tot studie 4 3.2 Experiment opzet ## Installation #if (!require(&quot;BiocManager&quot;, quietly = TRUE)) install.packages(&quot;BiocManager&quot;) #BiocManager::install(&quot;scRepertoire&quot;) suppressMessages(library(scRepertoire)) De data zijn afkomstig van het Nature artikel ‘Duvelisib plus romidepsin in relapsed/ refractory T cell lymphomas: a phase 1b/2a trial’ (Horwitz et al. 2024). In de studie werd tijdens klinische fase 1b/2a de combinatie van duvelisib, een PI3K-δγ-remmer, met romidepsine of bortezomib geëvalueerd bij patiënten met recidiverende of refractaire T-cellymfomen (TCL). Oftewel terugkerende of ongevoelige T-cel kanker. Het onderzoek had als doel de veiligheid te beoordelen, de maximaal getolereerde dosis vast te stellen en de werkzaamheid te bepalen. Het bleek dat de maximaal verdraagbare dosis van duvelisib 75 mg, tweemaal daags in combinatie met romidepsine was. In tegenstelling tot 25 mg tweemaal daags in combinatie met bortezomib. De meest voorkomende bijwerkingen waren neutropenie (tekort aan neutrofielen) en vermoeidheid bij patiënten behandeld met duvelisib en romidepsine. Onder patiënten met perifere T-cellymfomen (PTCL’s) waren de respons- en volledige responspercentages van duvelisib en romidepsine 55% en 34%, respectievelijk. Voor de behandeling met duvelisib en bortezomib waren dit 34% en 13% respectievelijk. Deze bevindingen ondersteunen de verdere ontwikkeling voor behandeling met de combinatie van PI3K- en histondeacetylase (HDAC)-remmers in T-cellymfomen. Voor deze studie werden perifere bloedmononucleaire cellen (PBMC’s) geïsoleerd, ontdooid en gekleurd met een levensvatbaarheidskleurstof (GhostDye 510) en een antilichaam gericht op CD45. Vervolgens werden de cellen gesorteerd op levensvatbaarheid. De bibliotheek werd opgezet aan de hand van de 10x Chromium Single Cell Immune Profiling Gel Bead Kit, waarmee single-cell RNA-sequencing (RNA-seq), oppervlakte-proteomics (ADT, Antibody-Derived Tags), en TCR-sequencing mogelijk werd gemaakt. De sequencing is uitgevoerd met Illumina NovaSeq 6000. De single-cell data werd verwerkt met behulp van verschillende bioinformatica-tools: RNA-Data: Verwerkt met de Cellranger v6.0.2 “count” workflow, wat resulteerde in genexpressie-tellingen in de vorm van rauwe en genormaliseerde matrixen. ADT-Data: Antibody-Derived Tags (ADT) werden geanalyseerd met de Feature Barcoding module van Cellranger om oppervlakte-proteïne-expressie te meten en cellen te demultiplexeren. TCR-Data: Clonale T-celreceptoren werden geïdentificeerd met behulp van de “vdj” pipeline van Cellranger. Alle data zijn gebaseerd op de menselijke referentie-assemblage GRCh38 (GENCODE v32/Ensembl 98). De ruwe datasets zijn openbaar toegankelijk in de Gene Expression Omnibus (GEO) database en bevatten: Ruwe genexpressie-matrixen (RNA-counts): Deze bevatten de expressieniveaus van genen per cel. GSM8254382 GSM8254385 Feature Barcoding-matrixen (ADT-counts): Deze bevatten de gemeten oppervlakte-eiwitten per cel. GSM8254383 GSM8254386 Geannoteerde TCR-data (Filtered contig annotations): Clonale T-celreceptor annotaties. GSM8254384 GSM8254387 Cell-sample annotaties: Toewijzing van individuele cellen aan specifieke monsters. GSE266760_SV-1840_SV_LN1_cell_sample_assign.csv GSE266760_SV-1840_SV_LN2_cell_sample_assign.csv Feature Reference-bestanden: GSE266760_feature_reference.csv.gz 3.3 Data voorbereiding De .csv bestanden zijn gedownload en vervolgens in R geladen met read_csv(). ## Data loading library(readr) library(dplyr) data_lane_1 &lt;- read_csv(&quot;C:/Users/manue/OneDrive/Documents/Manuel_Leeuwerik_portfolio/data_raw/GSM8254384_SV-1840_SV_LN1_filtered_contig_annotations.csv.gz&quot;) data_lane_2 &lt;- read_csv(&quot;C:/Users/manue/OneDrive/Documents/Manuel_Leeuwerik_portfolio/data_raw/GSM8254387_SV-1840_SV_LN2_filtered_contig_annotations.csv.gz&quot;) sample_lane_1 &lt;- read_csv(&quot;C:/Users/manue/OneDrive/Documents/Manuel_Leeuwerik_portfolio/data_raw/GSE266760_SV-1840_SV_LN1_cell_sample_assign.csv.gz&quot;) sample_lane_2 &lt;- read_csv(&quot;C:/Users/manue/OneDrive/Documents/Manuel_Leeuwerik_portfolio/data_raw/GSE266760_SV-1840_SV_LN2_cell_sample_assign.csv.gz&quot;) reference &lt;- read_csv(&quot;C:/Users/manue/OneDrive/Documents/Manuel_Leeuwerik_portfolio/data_raw/GSE266760_feature_reference.csv.gz&quot;) Sys.setenv(VROOM_CONNECTION_SIZE = 1e9) # meer buffer barcode_lane_1 &lt;- read_csv(&quot;C:/Users/manue/OneDrive/Documents/Manuel_Leeuwerik_portfolio/data_raw/GSM8254383_SV-1840_SV_LN1_FB_ADT_counts.csv.gz&quot;) barcode_lane_2 &lt;- read_csv(&quot;C:/Users/manue/OneDrive/Documents/Manuel_Leeuwerik_portfolio/data_raw/GSM8254386_SV-1840_SV_LN2_FB_ADT_counts.csv.gz&quot;) RNA_lane_1 &lt;- read_csv(&quot;C:/Users/manue/OneDrive/Documents/Manuel_Leeuwerik_portfolio/data_raw/GSM8254382_SV-1840_SV_LN1_RNA_counts.csv.gz&quot;) RNA_lane_2 &lt;- read_csv(&quot;C:/Users/manue/OneDrive/Documents/Manuel_Leeuwerik_portfolio/data_raw/GSM8254385_SV-1840_SV_LN2_RNA_counts.csv.gz&quot;) De geladen bestanden werden vervolgens bekeken met de functies head() en View(). Het viel op dat de ADT counts en RNA counts qua structuur erg op elkaar lijken. Beide hebben namelijk de cellen als kolom namen en in de eerste kolom metadata. Hoewel de cell-barcodes van RNA- en ADT-data overeenkomen, was er een mismatch tussen de barcodes in de cell-sample annotatie bestanden en de nucleotidesequenties van de data-bestanden. Hierdoor was het niet mogelijk om de metadata van de samples correct aan de data te koppelen. Er is verder niets gevonden over het koppelen van de samples aan de data op GEO of de site van 10x genomics. # Show the first two rows of each file print(head(data_lane_1, 2)) print(head(sample_lane_1, 2)) print(head(barcode_lane_1, 2)) print(head(RNA_lane_1, 2)) print(head(reference, 2)) Er is nog geprobeerd om met een matching loop te bepalen of delen van de sequenties van de barcodes van data_lane_1 kolom barcode of sample_lane_1 kolom Hastag.sequence, overeenkwamen met de namen van de cellen (en vice versa). Maar deze kwamen telkens uit op nul. # Extract the column names from barcode_lane_1 barcode_colnames &lt;- colnames(barcode_lane_1) # Initialize counters for matches total_matches &lt;- 0 matching_entries &lt;- data.frame() # Loop through each column name in barcode_colnames for (col_name in barcode_colnames) { # Check for matches in the &quot;barcode&quot; column of data_lane_1 barcode_matches &lt;- data_lane_1[grepl(col_name, data_lane_1$barcode), ] # Check for matches in the &quot;Hashtag.sequence&quot; column of sample_lane_1 hashtag_matches &lt;- sample_lane_1[grepl(col_name, sample_lane_1$Hashtag.sequence), ] # Combine matches from both checks combined_matches &lt;- rbind(barcode_matches, hashtag_matches) # Remove duplicates if any combined_matches &lt;- unique(combined_matches) # Update total matches and matching entries total_matches &lt;- total_matches + nrow(combined_matches) matching_entries &lt;- rbind(matching_entries, combined_matches) } # Print the total number of matches and the matching entries cat(&quot;Total Matches:&quot;, total_matches, &quot;\\n&quot;) print(matching_entries) In het artikel staat het volgende over hoe men de data vervolgens heeft bewerkt: “Processed RNA and ADT matrices were combined into a single Seurat version 4.0.0 object (using the CreateSeuratObject function), into which TCR clonotype information was subsequently incorporated using the scRepertoire version 1.7.2 combineExpression function. Filtering was applied upon the merged data to retain cells with only (1) more than 500 and fewer than 3,000 detected unique RNA features; (2) fewer than 10,000 total RNA molecules; (3) less than 5% mitochondrial RNA reads; and (4) fewer than 2,500 total ADT molecules. RNA and ADT data were normalized using Seurat’s NormalizeData function with ‘LogNormalize’ and ‘CLR’ methods specified for each, respectively.” (Horwitz et al. 2024). Er is geprobeerd dit zoveel mogelijk na te bootsen. Seurat is geinstaleerd en vervolgens is er een single Seurat object gemaakt met de RNA file en de Feature barcoding file. Eerst is dit geprobeerd met zowel data van lane_1 en lane_2 en deze te combineren. Maar dit bleek teveel data te zijn om telkens te laden en aan te passen. Daarom is er alleen data van lane_1 gebruikt en zijn deze ook nog gefilterd op alleen de eerste 5000 kolommen. Het was nodig om de metadata van de eerste kolom van RNA- en ADT counts als rij namen te zetten. library(dplyr) library(Matrix) library(Seurat) library(scRepertoire) # Subset to keep only the first 5000 columns selected_RNA &lt;- RNA_lane_1[, 1:5000] selected_ADT &lt;- barcode_lane_1[, 1:5000] # Convert to data.frame if they are tibbles selected_RNA &lt;- as.data.frame(selected_RNA) selected_ADT &lt;- as.data.frame(selected_ADT) # Move first column to rownames rownames(selected_RNA) &lt;- selected_RNA[, 1] # Set rownames selected_RNA &lt;- selected_RNA[, -1] # Remove the first column rownames(selected_ADT) &lt;- selected_ADT[, 1] # Set rownames selected_ADT &lt;- selected_ADT[, -1] # Remove the first column # Convert to matrices for Seurat object creation selected_RNA &lt;- as.matrix(selected_RNA) selected_ADT &lt;- as.matrix(selected_ADT) # Verify structure head(selected_RNA) head(selected_ADT) # Create Seurat object with the subsetted RNA data seurat_obj &lt;- CreateSeuratObject(counts = selected_RNA, assay = &quot;RNA&quot;) # Add the subsetted ADT data as a new assay seurat_obj[[&quot;ADT&quot;]] &lt;- CreateAssayObject(counts = selected_ADT) # save checkpoint saveRDS(seurat_obj, file = &quot;seurat_object_initial.rds&quot;) Vervolgens is het Seurat object gefilterd zoals gedaan is in de studie en genormalizeerd met LogNormalize (voor RNA) en CLR (voor ADT). # Read the RDS file seurat_obj &lt;- readRDS(file = &quot;seurat_object_initial.rds&quot;) # Calculate percentage of mitochondrial genes # Assuming that mitochondrial genes are prefixed with &quot;MT-&quot; seurat_obj[[&quot;percent.mt&quot;]] &lt;- PercentageFeatureSet(seurat_obj, pattern = &quot;^MT-&quot;) # Filtering cells based on specified criteria seurat_obj &lt;- subset(seurat_obj, subset = nFeature_RNA &gt; 500 &amp; nFeature_RNA &lt; 3000 &amp; nCount_RNA &lt; 10000 &amp; percent.mt &lt; 5 &amp; nCount_ADT &lt; 2500) # Normalize data seurat_obj &lt;- NormalizeData(seurat_obj, assay = &quot;RNA&quot;, normalization.method = &quot;LogNormalize&quot;) seurat_obj &lt;- NormalizeData(seurat_obj, assay = &quot;ADT&quot;, normalization.method = &quot;CLR&quot;) # Save Seurat object saveRDS(seurat_obj, file = &quot;Lane_1_seurat_object.rds&quot;) Hierna is geprobeerd om metadata toe te voegen maar vanwege de missende overlap in barcodes/identifiers tussen de sample data/TCR data en de RNA/ADT data was dit niet mogelijk. Zie hieronder code voor twee (van de vele) geprobeerde manieren om metadata toe te voegen. #One # Must be a list data_lane_1_list &lt;- list(data_lane_1) # Combine TCR data with the Seurat object seurat_obj &lt;- combineExpression(data_lane_1_list, seurat_obj, cloneCall=&quot;orig.ident&quot;) # Check the metadata of the Seurat object head(seurat_obj@meta.data) #Two # Define the prefix prefix &lt;- &quot;SV-1840_SV_LN1_&quot; # Add the prefix to the barcode column in TCR data data_lane_1$barcode &lt;- paste0(prefix, data_lane_1$barcode) # Check the modified TCR barcodes head(data_lane_1$barcode) # Check barcodes in the Seurat object seurat_barcodes &lt;- colnames(seurat_obj) # Aggregate TCR data by barcode, keeping the first occurrence tcr_metadata &lt;- data_lane_1 %&gt;% group_by(barcode) %&gt;% summarise( raw_clonotype_id = first(raw_clonotype_id), # Keep the first clonotype ID raw_consensus_id = first(raw_consensus_id), # Keep the first consensus ID .groups = &#39;drop&#39; # Drop the grouping structure ) # Check the structure of the aggregated TCR metadata print(dim(tcr_metadata)) # Should show the number of rows and columns head(tcr_metadata) # Display the first few rows # Set row names of TCR metadata to the barcode rownames(tcr_metadata) &lt;- tcr_metadata$barcode # Remove the barcode column as it&#39;s now the row name tcr_metadata$barcode &lt;- NULL # Add TCR metadata to the Seurat object seurat_obj &lt;- AddMetaData(seurat_obj, metadata = tcr_metadata) # Check the metadata of the Seurat object head(seurat_obj@meta.data) 3.4 Analyse Ondanks dat er geen metadata beschikbaar is voor de datasets, zijn er wel dingen gevisualiseerd. Dit voor een beeldvorming van het gebruik van scRepertoire. Eerst is met Seurat een PCA gedaan, met de functie RunPCA. Hieruit konden wel de top 5 genen van PC1 en PC2 bepaald worden. Voor PC1 zijn dit: CST3, IFI30, FCN1, AIF1 en SPI1. Voor PC2 zijn dit: GP9, CMTM5, TUBB1, GNG11 en MPIG6B. Deze genen hebben dus een hoog verschil in genexpressie tussen de cellen. Dit kan beteken dat ze worden beïnvloed op basis van behandeling. library(Seurat) library(readr) # Read the Seurat object from the RDS file seurat_obj &lt;- readRDS(&quot;Lane_1_seurat_object.rds&quot;) #Identify variable features seurat_obj &lt;- FindVariableFeatures(seurat_obj) #Scale the data seurat_obj &lt;- ScaleData(seurat_obj) # Run PCA seurat_obj &lt;- RunPCA(seurat_obj, features = VariableFeatures(seurat_obj)) # Visualize PCA DimPlot(seurat_obj, reduction = &quot;pca&quot;) # Get PCA loadings pca_loadings &lt;- seurat_obj[[&quot;pca&quot;]]@feature.loadings # View the top contributing genes for the first few PCs top_genes_pc1 &lt;- head(order(pca_loadings[, 1], decreasing = TRUE), 5) top_genes_pc2 &lt;- head(order(pca_loadings[, 2], decreasing = TRUE), 5) #print(&quot;Top genes for PC1:&quot;) #print(rownames(pca_loadings)[top_genes_pc1]) #print(&quot;Top genes for PC2:&quot;) #print(rownames(pca_loadings)[top_genes_pc2]) Om de datasets van lane1 en lane2 (beide de orginele TCR-datasets, niet gefiltered) te combineren werd de functie combineTCR gebruikt. De output van combineTCR() is een lijst van de data frames. Er is gekozen voor de default parameters. Hierdoor worden cellen met NA waardes en met meerdere immuunreceptoren (clonotypes) behouden. # Making data list data_list &lt;- list(data_lane_1, data_lane_2) # Voor functies van de scRepertoire # Save the data list to an RDS file saveRDS(data_list, file = &quot;data_list.rds&quot;) # Loading data list data_list &lt;- readRDS(&quot;data_list.rds&quot;) #Combining TCR combined.TCR &lt;- combineTCR(data_list, samples = c(&quot;lane1&quot;, &quot;lane2&quot;), removeNA = FALSE, removeMulti = FALSE, filterMulti = FALSE) Vervolgens zijn, met de gecombineerde dataset, verschillende analyses uitgevoerd. Als eerst is de functie clonalQuant gebruikt. Dit geeft het relatieve percentage van unieke clonotypes weer, geschaald naar de totale grootte van het clonale repertoire. De resultaten toonden aan dat de data van lane 1 relatief veel unieke clonotypes bevat. Dit betekent dat lane 1 een diverser TCR-repertoire heeft terwijl lane 2 wellicht samples bevat die bezig zijn met clonale expansie. clonalQuant(combined.TCR, cloneCall=&quot;strict&quot;, chain = &quot;both&quot;, scale = TRUE) Hierna is de clonalCompare functie gebruikt om om de clonale diversiteit en de verdeling van T-celreceptoren (TCR) tussen lane 1 en lane 2 te vergelijken. Er is gekozen om de top 10 clonotypes van lane 1 en lane 2 te visualiseren. De top is gebaseerd op de frequentie van de clone per sample. aa betekent dat de aminozuur sequentie van van de CD3 regio’s worden gebruikt in tegenstelling tot de eerder gebruikte strict definitie. De strict definitie neemt ook V, D, J en C genen mee en elke variatie wordt gezien als een nieuw clonotype. Er is gekozen voor aa om dat de functionele relevantie in dit geval belangrijker is dan de exacte sequentie. clonalCompare(combined.TCR, top.clones = 10, samples = c(&quot;lane1&quot;, &quot;lane2&quot;), cloneCall=&quot;aa&quot;, graph = &quot;alluvial&quot;) Uit de clonalCompare blijkt dat lane 2 relatief hoge proportie inneemt. Er zijn dus veel meer van dezelfde clonotypes in lane 2 aanwezig dan in lane 1. Dit suggereert dat cellen van lane 2 een actieve immuunsrespons ondergaan. Vervolgens is de functie clonalScatter toegepast om de verspreiding en aantallen van unieke clonotypes tussen lane 1 en lane 2 te visualiseren. Er is dit keer gekozen voor de optie gene. Dit maakt dat enkel de VDJC genen van de TCR mee worden genomen. De stippen geeft het aantal clonotypes aan en op de x- en y- as staan de proporties van de clonotypes ten opzichte van het totale clonale repertoire. De classificaties zijn als volgt gedefinieerd: Dual.expanded: Clonotypes die in zowel lane 1 als in lane 2, een significante aanwezigheid hebben. Lane1/2.expanded: Clonotypes die enkel in lane 1/2 een significante aanwezigheid hebben. Lane1/2.singlet: Clonotypes die enkel in lane 1/2 een aanwezigheid hebben, maar in kleine aantallen. clonalScatter(combined.TCR, cloneCall =&quot;gene&quot;, x.axis = &quot;lane1&quot;, y.axis = &quot;lane2&quot;, dot.size = &quot;total&quot;, graph = &quot;proportion&quot;) Uit de clonalScatter blijkt dat lane 2 een hoog aantal en een hoge proportie aan clonotypes heeft die niet in lane 1 voorkomen. Lane 1 heeft relatief weinig clonotypes (in aantallen en proporties) die niet in lane 2 voorkomen. Dit versterkt de suggestie dat cellen van lane 2 een actieve immuunsrespons ondergaan. Met de functie clonalProportion is vervolgens de rangschikking van de clonotypes binnen lane 1 en lane 2 weergegeven. Clonal Indicies betekent de rang. [1:10] zijn bijvoorbeeld de top 10 clonotypes in frequentie, van lane 1 of lane 2. Op de y-as staan de proporties van de rang ten opzichte van het totale clonale repertoire. clonalProportion(combined.TCR, cloneCall = &quot;gene&quot;) In de clonalProportion grafiek is te zien dat lane 1 een breed en relatief divers repertoire heeft. De top 10 clonotypes van lane 1 is qua frequentie relatief laag, waardoor de categorie [1001:10000] opgeteld meer bijdraagt aan het totaal repertoire. Terwijl de top 10 clonotypes van lane 2 merendeel van het clonale repertoire is (~75%). Dit wijst erop dat de samples in lane 2 een sterk clonaal geselecteerde immuunrespons vertonen, waarbij enkele clonotypes die domineren. Een andere manier om de diversiteit of clonale expensie van de TCR genen te visualiseren is met de functie vizGenes. Hierbij wordt de relatieve frequentie van genen uitgezet in een barplot. Er is gekeken naar zowel de TRAV als de TRBV. TRAV is de variabele regio van de alpha keten van de TCR en TRBV is de variabele regio van de beta keten van de TCR. vizGenes(combined.TCR, x.axis = &quot;TRAV&quot;, y.axis = NULL, plot = &quot;barplot&quot;, scale = TRUE) De barplot van TRAV toont aan dat lane 1 een meer diverse TRAV frequentie heeft, zonder dat specifieke genen een significante bijdrage leveren aan het repertoire. Lane 2 laat wel twee specifiek genen zien die veel bijdrage aan het repertoire, dit zijn TRAV4 en TRAV14/DV4. vizGenes(combined.TCR, x.axis = &quot;TRBV&quot;, y.axis = NULL, plot = &quot;barplot&quot;, scale = TRUE) De barplot van TRBV toont aan dat lane 1 een meer diverse TRBV frequentie heeft, zonder dat specifieke genen een significante bijdrage leveren aan het repertoire. Lane 2 laat weer twee specifiek genen zien die veel bijdrage aan het repertoire, dit zijn TRBV7-6 en TRBV10-2. 3.5 Conclusie In conclusie biedt de scRepertoire package een breed scala aan plots en analyses voor het visualiseren en analyseren van TCR/BCR-data. Omdat het koppelen van de metadata aan de RNA/ADT/TCR data niet is gelukt kunnen er geen uitspraken worden gedaan over de inhoud van het experiment. Desondanks kan op basis van de verschillende plots worden geconcludeerd dat de cellen afkomstig van lane 1 een breed en relatief divers TCR-repertoire hebben. Terwijl de cellen afkomstig van lane 2 een veel lagere diversiteit vertonen en bepaalde clonotypes in hoge frequenties voorkomen. Dit suggereert dat sommige cellen van lane 2 clonale expansie ondergaan. "],["Ga.html", "4 Guerrila analytics", " 4 Guerrila analytics Om meer structuur in de folders te creëren en mijn project beter te organiseren, is de Guerrilla Analytics-framework toegepast op mijn DAUR II RStudio-project. Er zijn bijvoorbeeld readme.txt-bestanden toegevoegd en de folders zijn ingedeeld op basis van projecten. Er zijn tijdens DAUR II, twee algemene projecten uitgevoerd: één gericht op metagenomics en één op RNA-sequencing (rna_seq). Bovendien zijn er formatieve opdrachten uitgevoerd voor beide, en binnen RNA-sequencing is ook een eindopdracht afgerond. Aan de hand van het fs pakket in R, is er een overzicht van de mapstructuur gemaakt. Voor de leesbaarheid is de diepte van de folderboom beperkt tot 2 niveaus (recurse = 2). Hieronder de code en het bijbehorende resultaat. #install.packages(&quot;fs&quot;) library(fs) # Set the path to your desired directory path &lt;- &quot;C:/Users/manue/OneDrive/Documents/DAUR&quot; # Visualize the folder structure dir_tree(path, recurse = 2) ## C:/Users/manue/OneDrive/Documents/DAUR ## ├── example_data.Rmd ## ├── metagenomics ## │ ├── code ## │ │ ├── Bracken-master ## │ │ └── daur2metagenomics ## │ ├── data ## │ │ └── README ## │ └── data_raw ## │ ├── kraken ## │ └── README ## ├── metagenomics_formatieve_opdracht ## │ ├── Formatieve_opdracht_metagenomics.html ## │ ├── Formatieve_opdracht_metagenomics.Rmd ## │ └── README ## ├── README ## ├── rna_seq ## │ ├── code ## │ │ ├── bigwig ## │ │ ├── lessons ## │ │ ├── README ## │ │ └── samscripts ## │ └── data_raw ## │ ├── fastqc_outputdaur2 ## │ └── README ## ├── rna_seq_eindopdracht ## │ ├── code ## │ │ ├── Eindopdracht_daur2_Manuel_Leeuwerik_Philine_van_Bekkum (2).Rmd ## │ │ ├── Eindopdracht_daur2_Manuel_Leeuwerik_Philine_van_Bekkum (3).html ## │ │ └── README ## │ └── data_raw ## │ ├── assignment_desc ## │ └── fastqcfiles ## └── rna_seq_formatieve_opdracht ## ├── code ## │ ├── formatieve_opdracht_Manuel_Leeuwerik.html ## │ ├── formatieve_opdracht_Manuel_Leeuwerik.Rmd ## │ └── README ## └── data_raw ## ├── fastqc_output ## ├── README ## └── read_counts_OC2.rds "],["elegans.html", "5 C. elegans plate experiment 5.1 Inleiding 5.2 Inspecteren data types 5.3 Scatterplot 5.4 Dosis-response curves 5.5 Conclusie", " 5 C. elegans plate experiment 5.1 Inleiding De data is afkomstig van een C.elegans experiment waarbij nematodes werden blootgesteld aan de volgende chemicaliën (oftewel compounds): S-medium, ethanol, decane, naphthalene en 2,6-diisopropylnaphthalene. Na incubatie met verschillende concentraties van de compounds zijn de nakomelingen van de C.elegans geteld (de RawData). Met dit experiment wordt er gekeken naar het effect van de verschillende compounds op het vormen van nakomelingen bij C.elegans. Voor de visualisatie stappen van deze analyse worden de R-packages drc en ggplot2 gebruikt. 5.2 Inspecteren data types Om te bepalen of de data correct is geïmporteerd in Rstudio worden de data types van RawData, compName (naam van compound) en compConcentration (concentratie van compound) bekeken. str(tidy_data[, c(&quot;RawData&quot;, &quot;compName&quot;, &quot;compConcentration&quot;)]) ## tibble [360 × 3] (S3: tbl_df/tbl/data.frame) ## $ RawData : num [1:360] 44 37 45 47 41 35 41 36 40 38 ... ## $ compName : chr [1:360] &quot;2,6-diisopropylnaphthalene&quot; &quot;2,6-diisopropylnaphthalene&quot; &quot;2,6-diisopropylnaphthalene&quot; &quot;2,6-diisopropylnaphthalene&quot; ... ## $ compConcentration: chr [1:360] &quot;4.99&quot; &quot;4.99&quot; &quot;4.99&quot; &quot;4.99&quot; ... Het datatype van RawData is numeric, die van compName is character en die van compConcentration is character. Het datatype van CompConcentration zou numeric moeten zijn, wat betekent dat de data niet geheel correct geïmporteerd is in Rstudio. 5.3 Scatterplot Als eerst is de data in de kolom compConcentration omgezet tot het datatype numeric. Vervolgens is de data gevisualiseerd in een scatterplot, zie figuur 1. # fixing compConcentration to numeric tidy_data$compConcentration&lt;- as.numeric(tidy_data$compConcentration) # plotting scatter_plot &lt;- ggplot(tidy_data, aes( x = compConcentration, y = RawData, color = compName, shape = expType )) + geom_jitter(position = position_jitter(width = 0.1, seed = 0)) + # With jitter labs( title = &quot;Scatterplot van compounds&quot;, x = &quot;Compound concentratie (log)&quot;, y = &quot;Aantal C.elegans nakomelingen&quot;, color = &quot;Naam van compound&quot;, shape = &quot;Experiment Type&quot; ) + theme_minimal() + # Apply a minimal theme theme( axis.text.x = element_text(angle = 45, hjust = 1) # Rotate x-axis labels ) + scale_x_log10()+ # Use a logarithmic scale for the x-axis scale_y_continuous(breaks = seq(0, 120, by = 20)) scatter_plot Figuur 1: Scatterplot resultaten. Met op de y-as het aantal C.elegans nakomelingen en op de x-as de log10 van de compound concentratie. De compounds zijn per naam gekleurd en per experiment type is er een ander symbool gebruikt. De datapunten zijn iets verplaatst met jitter. In figuur 1 is te zien dat ethanol de positieve controle, en S-medium de negatieve controle is voor dit experiment. Er is duidelijk een negatieve correlatie tussen de compound concentratie en het aantal nakomelingen van C.elegans. Het valt op dat decane een sterke daling toont en dat bij de hoogste concentratie van naphthalene er zeer weinig nakomelingen zijn waargenomen. Om te bepalen wat het effect is van ethanol, decane, naphtalene en 2,6-diisopropylnaphthalene op het aantal nakomelingen van C.elegans wordt er voor elke compound een dosis-respons curve gemaakt. Hiervoor moet de data eerst genormaliseerd worden, dit om variatie door experimentele omstandigheden te verminderen. Vervolgens wordt de data gefilterd op afwezige datapunten en wordt er voor elke compound een apart object gemaakt. Hierna wordt de data gefit en worden alle curves in één grafiek geplot. Om de IC50’s aan te geven worden deze ook berekend. De dosis-response curves en de bijbehorende IC50’s zijn weergegeven in figuur 2. #Calculating mean control_mean &lt;- mean(tidy_data$RawData[tidy_data$expType == &quot;controlNegative&quot;], na.rm = TRUE) # Normalize the data tidy_data$normalized_RawData &lt;- tidy_data$RawData / control_mean # Filter out NA values from the dataset tidy_data_without_NA &lt;- tidy_data %&gt;% filter(!is.na(normalized_RawData) &amp; !is.na(compConcentration) &amp; !is.na(compName)) # Isolate compounds ethanol_data &lt;- tidy_data_without_NA %&gt;% filter(compName == &quot;Ethanol&quot;) decane_data &lt;- tidy_data_without_NA %&gt;% filter(compName == &quot;decane&quot;) naphthalene_data &lt;- tidy_data_without_NA %&gt;% filter(compName == &quot;naphthalene&quot;) dii_data &lt;- tidy_data_without_NA %&gt;% filter(compName == &quot;2,6-diisopropylnaphthalene&quot;) # Fit models for each compound fit_ethanol &lt;- drm(normalized_RawData ~ compConcentration, data = ethanol_data, fct = LL.4()) fit_decane &lt;- drm(normalized_RawData ~ compConcentration, data = decane_data, fct = LL.4()) fit_naphthalene &lt;- drm(normalized_RawData ~ compConcentration, data = naphthalene_data, fct = LL.4()) fit_dii &lt;- drm(normalized_RawData ~ compConcentration, data = dii_data, fct = LL.4()) # Calculate IC50 values ethanol_ic50 &lt;- ED(fit_ethanol, 50)[1] decane_ic50 &lt;- ED(fit_decane, 50)[1] naphthalene_ic50 &lt;- ED(fit_naphthalene, 50)[1] compound_26_ic50 &lt;- ED(fit_dii, 50)[1] 5.4 Dosis-response curves # Set up the base plot for ethanol with extended x-axis plot( fit_ethanol, type = &quot;all&quot;, log = &quot;x&quot;, col = &quot;red&quot;, ylim = c(0, 1.5), xlim = c(0.01, max(tidy_data_without_NA$compConcentration, na.rm = TRUE)), xlab = &quot;Compound concentratie (log)&quot;, ylab = &quot;Gernomaliseerde response&quot;, main = &quot;Dosis-response curves&quot; ) # Add curves for other compounds plot(fit_decane, add = TRUE, col = &quot;blue&quot;, type = &quot;all&quot;) plot(fit_naphthalene, add = TRUE, col = &quot;green&quot;, type = &quot;all&quot;) plot(fit_dii, add = TRUE, col = &quot;purple&quot;, type = &quot;all&quot;) # Create legend labels with IC50 values legend_labels &lt;- c( paste(&quot;Ethanol (IC50 =&quot;, round(ethanol_ic50, 2), &quot;)&quot;), paste(&quot;Decane (IC50 =&quot;, round(decane_ic50, 2), &quot;)&quot;), paste(&quot;Naphthalene (IC50 =&quot;, round(naphthalene_ic50, 2), &quot;)&quot;), paste(&quot;2,6-diisopropylnaphthalene (IC50 =&quot;, round(compound_26_ic50, 2), &quot;)&quot;) ) # Add legend legend( &quot;topright&quot;, legend = legend_labels, col = c(&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;, &quot;purple&quot;), lty = 1, bty = &quot;n&quot;, cex = 0.8 ) Figuur 2: Dosis-response curves resultaten. Met op de y-as het genormaliseerde aantal C.elegans nakomelingen en op de x-as de log10 van de compound concentratie. De compounds zijn per naam gekleurd en de IC50’s zijn aangegeven in de legenda. In figuur 2 is te zien dat de IC50 voor ethanol (de positieve controle), 1.19 is. De IC50 waardes voor de andere compounds zijn: 0.12 voor decane, 3.13 voor naphtalene en 0.03 voor 2,6-diisopropylnaphthalene. De relatief lage IC50 waarde van 2,6-diisopropylnaphthalene suggereert dat het een sterke toxiciteit heeft. Terwijl naphthalene een relatief hoge IC50 waarde heeft en dus een lage toxiciteit suggereert. 5.5 Conclusie In dit experiment is er gekeken naar het effect van ethanol, decane, naphtalene en 2,6-diisopropylnaphthalene op het aantal nakomelingen van C.elegans. Op basis van het scatterplot bleek dat decane en naphthalene een sterk negatief effect hadden op het aantal nakomelingen van C.elegans. Terwijl de dosis-response curves suggereert dat 2,6-diisopropylnaphthalene het meest negatief effect heeft met een IC50 = 0.03. Er zouden meer analyses uitgevoerd moeten worden om wellicht een duidelijke conclusie te kunnen trekken, zoals een ANOVA test. Het is aan te bevelen om het experiment volledig te herhalen met een uitgebreidere concentratiereeks, inclusief hogere concentraties van de compounds. "],["peer.html", "6 Open Peer Review", " 6 Open Peer Review Auteur: Manuel Leeuwerik Voor deze open peer review is er het Nature artikel ‘Adipose tissue retains an epigenetic memory of obesity after weight loss’ (Hinte 2024) beordeeld. Deze studie onderzocht hoe vetweefsel een epigenetisch geheugen van obesitas behoudt, zelfs na aanzienlijk gewichtsverlies. Het richt zich op de moleculaire basis van dit “obesogene geheugen” en de impact ervan op de metabole functie, waaronder de aanleg voor gewichtstoename. Het onderzoek deed single-nucleus RNA-sequencing (snRNA-seq) van humaan subcutaan en omentaal vetweefsel van personen, die een maag verkleining ondergingen. En snRNA-seq met muismodellen die werden blootgesteld aan vetrijk voedsel en vervolgens gewicht verloren. De studie toonde aan dat zowel humaan als muizenvetweefsel blijvende transcriptie veranderingen vertoont na significant gewichtsverlies. Opvallend is dat obesitas-geïnduceerde veranderingen in het epigenoom van muizen adipocyten, de functionaliteit en gevoeligheid voor metabole signalen nadelig beïnvloedden. Muizen met dit “obesogene geheugen” ervaarde een versnelde gewichtstoename, en de aanwezigheid van dit epigenetische geheugen werd gekoppeld aan toekomstige transcriptie disregulatie bij blootstelling aan een vetrijk dieet. Deze bevindingen benadrukken het bestaan van een obesogeen geheugen in muizenadipocyten. Dit draagt bij aan het bekende “jojo-effecten” die vaak met diëten gepaard gaan. Ik heb dit artikel beoordeeld aan de hand van de ‘Ripeta’-criteria. Zie de onderstaande tabel met transparantiecriteria. Zie (“(PDF) Reproducibility and Reporting Practices in COVID-19 Preprint Manuscripts” 2024) voor meer informatie over de beoordeling. Tabel met transparantiecriteria Transparantiecriteria Definitie Score Doel van de studie Een beknopte verklaring in de inleiding van het artikel, vaak in de laatste alinea, die het doel van het onderzoek vaststelt. Ook wel het studie-objectief genoemd. Ja Verklaring beschikbaarheid van data Een verklaring, in een aparte sectie los van de hoofdtekst, die uitlegt hoe of of men toegang kan krijgen tot de data van de studie. De titel van de sectie kan variëren, maar moet expliciet data noemen en is daarom anders dan een sectie over aanvullende materialen. Ja Locatie van de data Waar de data van het artikel te vinden is, zowel ruwe als verwerkte data. Muizen snRNA-seq data beschikbaar, menselijke snRNA-seq data op aanvraag en alle differentiële genexpressie- en epigenetische analyses zijn beschikbaar. Locatie van de studie De auteur heeft in de methodensectie aangegeven waar de studie is uitgevoerd of uit welk land/gebied de data afkomstig is. Ja; Zürich Auteurbeoordeling De professionaliteit van de contactinformatie die de auteur in het manuscript heeft verstrekt. Niveau 4 Ethische verklaring Een verklaring in het manuscript waarin eventuele ethische overwegingen worden vermeld, inclusief de aanwezigheid van gevoelige data. Ja Verklaring van financiering Een verklaring in het manuscript waarin wordt aangegeven of de auteurs financiering hebben ontvangen voor hun onderzoek. Ja Beschikbaarheid van code De auteurs hebben toegang gedeeld tot de meest recente code die ze in hun studie hebben gebruikt, inclusief code die is gebruikt voor analyse. Ja Ik heb een ander project beoordeeld op kwaliteit van de R-code. Het project heet:The Role of Risk Preferences in Responses to Messaging about COVID-19 Vaccine Take-up (“OSF The Role of Risk Preferences in Responses to Messaging about COVID-19 Vaccine Take-up” n.d.). Het project gaat over individuele verschillen in risicovoorkeuren met betrekking tot het COVID-19-vaccin. De bevindingen suggereren dat beleidsmakers rekening moeten houden met risicovoorkeuren bij de communicatie met betrekking tot vaccinatie. Ik heb in het specifiek gekeken naar het bestand: Study1.Rmd, dit werd gebruikt om de resultaten in het artikel te reproduceren. Wat betreft de leesbaarheid van de code geef ik het een 2 (1 is zeer slecht en 5 is zeer goed). Er zijn koppen in de Rmd, maar er ontbreken opmerkingen, figuurreferenties en README-bestanden. Ik heb eerst de packages en het databestand Study1.csv geïnstalleerd. Vervolgens heb ik een deel van de code uitgevoerd, vanaf “##COVID-19 standard vaccine” (omdat de volledige code te veel informatie bevat voor deze review). Ik kwam één fout tegen vanwege een verouderde package genaamd “library(semTable)”. Ik heb dit verwijderd uit de setup en de (werkende) code opnieuw uitgevoerd. Ik heb niet veel moeite hoeven te doen om de visualisaties uit het project te reproduceren, dus beoordeel ik de reproduceerbaarheid met een 4 (1 is zeer moeilijk en 5 is zeer eenvoudig). Voor de leesbaarheid in deze review heb ik deel van de code verborgen en de koppen vetgedrukt weergegeven uit de oorspronkelijke code (er staat niet veel tekst in het oorspronkelijke codebestand). Hieronder volgen twee figuren (figure 1 en figure 2) die gereproduceerd zijn uit de oorsponkelijke code. Moderation by political affliation Response options for political affliation variable: 1 = Republican, 2 = Lean Republican, 3 = Independent, 4 = Lean Democrate, 5 = Democrate COVID-19 standard vaccine Figure 1 vaccine = 3.057966 + 0.190122political + (0.127855 -0.029009political)*risk ## create an empty frame plot(df_study1$risky_choices , df_study1$vaccine_standard, type=&#39;n&#39;, xlab=&#39;Number of Risky Choices&#39;, ylab=&#39;COVID-19 Vaccine Standard&#39;) ## abline(interceptvalue, linearslopevalue) # for Republican abline(3.057966 + 0.190122*1, 0.127855-0.029009*1, col=&#39;red&#39;, lwd = 2) # for Lean Republican abline(3.057966 + 0.190122*2, 0.127855-0.029009*2, col=&#39;pink&#39;, lwd = 2) # for Independent abline(3.057966 + 0.190122*3, 0.127855-0.029009*3, col=&#39;purple&#39;, lwd = 2) # for Lean Democrate abline(3.057966 + 0.190122*4, 0.127855-0.029009*4, col=&#39;cadetblue1&#39;, lwd = 2) # for Democrate abline(3.057966 + 0.190122*5, 0.127855-0.029009*5, col=&#39;blue&#39;, lwd = 2) legend(&#39;bottomright&#39;, c(&#39;Republican&#39;, &#39;Lean Republican&#39;, &#39;Independent&#39;, &#39;Lean Democrat&#39;, &#39;Democrat&#39;), lty=c(1,1,1), lwd = 2, col=c(&#39;red&#39;,&#39;pink&#39;,&#39;purple&#39;, &#39;light blue&#39;, &#39;blue&#39;)) COVID-19 fast vaccine Figure 2 vaccine = 2.787596 + 0.115567political + (0.153019 -0.024416political)*risk ## create an empty frame plot(df_study1$risky_choices , df_study1$vaccine_fast, type=&#39;n&#39;, xlab=&#39;Number of Risky Choices&#39;, ylab=&#39;COVID-19 Vaccine Fast&#39;) ## abline(interceptvalue, linearslopevalue) # for Republican abline(2.787596 + 0.115567*1, 0.153019-0.024416*1, col=&#39;red&#39;, lwd = 2) # for Lean Republican abline(2.787596 + 0.115567*2, 0.153019-0.024416*2, col=&#39;pink&#39;, lwd = 2) # for Independent abline(2.787596 + 0.115567*3, 0.153019-0.024416*3, col=&#39;purple&#39;, lwd = 2) # for Lean Democrate abline(2.787596 + 0.115567*4, 0.153019-0.024416*4, col=&#39;cadetblue1&#39;, lwd = 2) # for Democrate abline(2.787596 + 0.115567*5, 0.153019-0.024416*5, col=&#39;blue&#39;, lwd = 2) legend(&#39;bottomright&#39;, c(&#39;Republican&#39;, &#39;Lean Republican&#39;, &#39;Independent&#39;, &#39;Lean Democrat&#39;, &#39;Democrat&#39;), lty=c(1,1,1), lwd = 2, col=c(&#39;red&#39;,&#39;pink&#39;,&#39;purple&#39;, &#39;light blue&#39;, &#39;blue&#39;)) "],["package.html", "7 A new R package 7.1 Spotting penguins", " 7 A new R package 7.1 Spotting penguins De spottingpenguins package is gemaakt om de visualisatie van de dataset palmerpenguins te vergemakkelijken. Deze dataset bevat metingen van verschillende pinguïnsoorten. Er zijn verschillende visualisatiefuncties beschikbaar in het pakket, waaronder scatterplots, staafdiagrammen met standaardafwijking en boxplots. De code van de spottingpenguins is te vinden op github. Om te beginnen moet je het spottingpenguins pakket installeren. Je kunt dit doen met het devtools pakket: # Install devtools als je die nog niet hebt. install.packages(&quot;devtools&quot;) devtools::install_github(&quot;ManuelLeeuwerik/spottingpenguins&quot;, build_vignettes = TRUE) De vignette kan vervolgens bekeken worden met het volgende command: browseVignettes(&quot;spottingpenguins&quot;) Zodra de package geïnstalleerd is kan deze, samen met de benodigde dataset palmerpenguinsingeladen worden: library(spottingpenguins) library(palmerpenguins) Barspecies visualiseert de pinguïn soorten in een bargraph met aantal (“counts”) of de proportie (“proportion”), met keuze voor kleur van de graph. Voor meer info: ?barspecies. #Voorbeeld barspecies(&quot;magenta&quot;, &quot;proportion&quot;) Scatterpenguins genereert een scatterplot voor de gewenste pinguïnmetingen (bill length, bill depth, flipper length, or body mass) en toont de Pearson correlatiecoëfficiënt in het plot. Voor meer info ?scatterpenguins. # Voorbeeld scatterpenguins(&quot;body_mass_g&quot;, &quot;flipper_length_mm&quot;) Penguin_avg_bar genereert een staafdiagram met het gemiddelde van een bepaalde pinguïnmeting voor elke soort, met errorbars. Voor meer info ?penguin_avg_bar. #Voorbeeld penguin_avg_bar(&quot;flipper_length_mm&quot;) Penguin_measurement_boxplot genereert een boxplot met de verdeling van een bepaalde pinguïnmeting voor elke soort. Met als rode punt de outliers. Voor meer info ?penguin_measurement_boxplot #Voorbeeld penguin_measurement_boxplot(&quot;body_mass_g&quot;) "],["projecticum.html", "8 Projecticum", " 8 Projecticum De VITEK®2 Compact, ontwikkeld door bioMérieux, is een geautomatiseerd microbiologisch systeem voor de identificatie en antibioticagevoeligheid van micro-organismen op basis van groei. Het systeem maakt gebruik van colorimetrische reagentia-kaarten die de optische dichtheid (OD) en kleuromzetting bij verschillende golflengtes meten. De identificatiekaarten bevatten 64 wells voor diverse metabolische tests, waarbij enzymatische reacties, groei in specifieke media en pH-veranderingen worden geanalyseerd. Metingen vinden elke 15 minuten plaats tot de maximale incubatietijd is bereikt. De duur van de incubatietijd voor de verschillende ID-kaarten is als volgt: GN = 4 - 10 uur, GP = 5 - 8 uur, ANC = 6 uur, NH = 6 uur, YST = 18 uur, en BCL = 14 uur. Voor de gevoeligheidstest worden AST-kaarten gebruikt, waarbij de minimale remmende concentratie (MIC) wordt geïnterpreteerd volgens EUCAST-richtlijnen als gevoelig (S), intermediair (I) of resistent (R). Elke kaart test ongeveer 19 antibiotica in verschillende concentraties en bevat een groeicontrole. De MIC wordt berekend met OD-waardes en de groeisnelheid van het micro-organisme, op basis van bekende ijkmetingen van de database. De VITEK®2 maakt gebruik van een Expert System (AES) dat richtlijnen biedt voor de interpretatie van antibioticaresultaten en de detectie van resistentiemechanismen. Elke kaart heeft een barcode voor identificatie en een vooraf geplaatste transferbuis voor inoculatie. Micro-organismen worden overgebracht naar een steriele zoutoplossing, waarvan de troebelheid wordt aangepast tot de juiste McFarland-waarde. De geënte kaarten worden in een vacuümstation geplaatst, waar de suspensie in de testopeningen van de kaart wordt geperst. Na het afsnijden van de transferbuis worden de kaarten in een carrouselincubator geplaatst, waar ze bij 35,5 ± 1,0 ºC worden geïncubeerd. Resultaten worden elke 15 minuten afgelezen en weergegeven als “+”, “-”, “(-)” of “(+)”, waarbij de haakjes aanduiden als het resultaat van de reactie te dicht bij de threshold ligt. De databases van de VITEK®2 zijn opgebouwd uit goed gekarakteriseerde micro-organismen. Testgegevens van onbekende organismen worden vergeleken met deze databanken om de identiteit van het micro-organisme te bepalen. Bij lage discriminatie worden meerdere mogelijke organismen weergegeven, en aanvullende tests kunnen nodig zijn voor definitieve identificatie (Pincus, n.d.). Er zijn verschillende kaarten beschikbaar voor de identificatie van verschillende organismen: GN-kaarten: Identificatie Gram-negatieve staven. Wordt gebruikt voor de identificatie van 135 fermenterende en niet-fermenterende Gram-negatieve bacillen. De kaart bevat 47 biochemische tests en één negatieve. GP-kaarten: Identificatie Gram-positieve kokken en staven. Wordt gebruikt voor de identificatie van 115 niet-sporevormende Gram-positieve bacteriën, voornamelijk cocci. Deze kaart bevat 43 biochemische tests. NH-kaarten: Identificatie langzaam groeiende Gram-negatieve bacteriën. YST-kaarten: Identificatie gisten. BCL-kaarten: Identificatie Bacillus-soorten. ANC-kaarten: Identificatie anaërobe en micro-aërofiele bacteriën. De meeste onderzoeken rondom VITEK gaan over de evaluatie van het apparaat, in andere woorden hoe accuraat en betrouwbaar is het? Zoals deze artikelen: (Cecilia G. Carvalhaes 2024; Kavipriya et al. 2021; Nakasone et al. 2007; Ligozzi et al. 2002) .Maar er wordt niet gekeken naar de ruwe data van de VITEK. De VITEK meet voor de identificatie van micro-organismen extincties en optische dictheid. Hieruit wordt een patroon gegenereerd, deze wordt vergeleken met de database van VITEK en hieruit volgt de identificatie. In dit project wordt er een (RShiny) dashboard gemaakt waarin de onderzoeker de ruwe data (log bestanden) van de VITEK in kan lezen. In het dashboard kan de onderzoeker dan vervolgens de verschillende reacties over de tijd visualiseren. De onderzoeker moet hiermee kunnen achterhalen welke variabelen (welletjes) nuttig zijn om de organismen te identificeren. "],["covidc.html", "9 COVID rapport", " 9 COVID rapport Dit is een rapport met parameters voor COVID-19 gevallen. De data is gedownload via de European Centre for Disease Prevention and Control, ECDC (“Data on the Daily Number of New Reported COVID-19 Cases and Deaths by EU/EEA Country” 2022). De Rmarkdown bevat de parameters: land, jaar en de periode in maanden waarop het rapport van toepassing is. Er is een grafiek voor de COVID-19-gevallen en een grafiek voor de COVID-19-gerelateerde sterfgevallen. # Load necessary libraries library(utils) library(ggplot2) library(dplyr) library(lubridate) # For date manipulation # Read the Dataset sheet into “R”. The dataset will be called &quot;data&quot;. data &lt;- read.csv(&quot;https://opendata.ecdc.europa.eu/covid19/nationalcasedeath_eueea_daily_ei/csv&quot;, na.strings = &quot;&quot;, fileEncoding = &quot;UTF-8-BOM&quot;) # Convert dateRep to Date type data$dateRep &lt;- dmy(data$dateRep) # Ensure the date is in the correct format # Filter the dataset based on the parameters filtered_data &lt;- data %&gt;% filter(countriesAndTerritories == params$country, year(dateRep) == params$year, month(dateRep) == params$month) # Convert cases and deaths to numeric and remove NA values filtered_data$cases &lt;- as.numeric(filtered_data$cases) filtered_data$deaths &lt;- as.numeric(filtered_data$deaths) filtered_data &lt;- filtered_data %&gt;% filter(!is.na(cases), !is.na(deaths)) # Plotting COVID-19 cases ggplot(filtered_data, aes(x = dateRep, y = cases)) + geom_line(color = &quot;blue&quot;) + labs(title = paste(&quot;COVID-19 Cases in&quot;, params$country, &quot;for the year&quot;, params$year), x = &quot;Date&quot;, y = &quot;Number of Cases&quot;) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) # Rotate x-axis labels vertically # Plotting COVID-19 deaths ggplot(filtered_data, aes(x = dateRep, y = deaths)) + geom_line(color = &quot;red&quot;) + labs(title = paste(&quot;COVID-19 Deaths in&quot;, params$country, &quot;for the year&quot;, params$year), x = &quot;Date&quot;, y = &quot;Number of Deaths&quot;) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) # Rotate x-axis labels vertically Dit html-document toont een COVID-19-rapport op basis van gespecificeerde parameters (year = 2021, month = 1, country = “Austria”). Dit rapport werd gegenereerd met de bovenstaande code en gerenderd met de code: rmarkdown::render(“C:/Users/manue/OneDrive/Documents/Manuel_Leeuwerik_portfolio/10_parameterized_COVID.Rmd”, params = list(year = 2021, month = 1, country = “Austria”)) "],["zotero.html", "10 Zotero Referenties", " 10 Zotero Referenties Cecilia G. Carvalhaes, Leah N. Woosley, Dee Shortridge. 2024. “Performance of the Vitek 2 Advanced Expert System (AES) as a Rapid Tool for Reporting Antimicrobial Susceptibility Testing (AST) in Enterobacterales from North and Latin America.” ResearchGate 11 (1): 1–11. https://doi.org/10.1128/spectrum.04673-22. “Data on the Daily Number of New Reported COVID-19 Cases and Deaths by EU/EEA Country.” 2022. https://www.ecdc.europa.eu/en/publications-data/data-daily-new-cases-covid-19-eueea-country. Hinte, Daniel Ghosh, Laura C. Castellano-Castillo. 2024. “Adipose Tissue Retains an Epigenetic Memory of Obesity After Weight Loss Nature.” Nature. https://www.nature.com/articles/s41586-024-08165-7. Horwitz, Steven M., Ajit J. Nirmal, Jahan Rahman, Ran Xu, Esther Drill, Natasha Galasso, Nivetha Ganesan, et al. 2024. “Duvelisib Plus Romidepsin in Relapsed/Refractory T Cell Lymphomas: A Phase 1b/2a Trial.” Nature Medicine 30 (9): 2517–27. https://doi.org/10.1038/s41591-024-03076-6. Kavipriya, D., Suman Susan Prakash, Sarumathi Dhandapani, Deepashree Rajshekar, and Apurba Sankar Sastry. 2021. “Evaluation of the Performance of Direct Susceptibility Test by VITEK-2 from Positively Flagged Blood Culture Broth for Gram-Negative Bacilli.” Journal of Laboratory Physicians 13 (4): 374–79. https://doi.org/10.1055/s-0041-1732489. Ligozzi, Marco, Cinzia Bernini, Maria Grazia Bonora, Maria De Fatima, Jessica Zuliani, and Roberta Fontana. 2002. “Evaluation of the VITEK 2 System for Identification and Antimicrobial Susceptibility Testing of Medically Relevant Gram-Positive Cocci.” Journal of Clinical Microbiology 40 (5): 1681–86. https://doi.org/10.1128/JCM.40.5.1681-1686.2002. Nakasone, Isamu, Tohru Kinjo, Nobuhisa Yamane, Kyoko Kisanuki, and Chika M. Shiohira. 2007. “Laboratory-Based Evaluation of the Colorimetric VITEK-2 Compact System for Species Identification and of the Advanced Expert System for Detection of Antimicrobial Resistances: VITEK-2 Compact System Identification and Antimicrobial Susceptibility Testing.” Diagnostic Microbiology and Infectious Disease 58 (2): 191–98. https://doi.org/10.1016/j.diagmicrobio.2006.12.008. “OSF The Role of Risk Preferences in Responses to Messaging about COVID-19 Vaccine Take-up.” n.d. https://osf.io/nkuzp/. Accessed December 30, 2024. “(PDF) Reproducibility and Reporting Practices in COVID-19 Preprint Manuscripts.” 2024. ResearchGate. https://www.researchgate.net/publication/340244621_Reproducibility_and_reporting_practices_in_COVID-19_preprint_manuscripts. https://doi.org/10.1101/2020.03.24.20042796. Pincus, David H. n.d. “MICROBIAL IDENTIFICATION USING THE BIOMÉRIEUX VITEK 2 SYSTEM.” Biomerieux, 1–27. “Single-Cell Immune Profiling.” n.d. CeGaT GmbH. Accessed December 30, 2024. “Starting Work with scRepertoire.” n.d. https://www.bioconductor.org/packages/devel/bioc/vignettes/scRepertoire/inst/doc/vignette.html. Accessed December 30, 2024. theHumanBorch. 2024. “Ncborcherding/scRepertoire.” "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
